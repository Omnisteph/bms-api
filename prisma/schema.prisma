// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id              String         @id @default(uuid())
  name            String
  email           String         @unique
  phoneNumber     String
  address         String
  membershipStart DateTime
  isActive        Boolean        @default(true)
  role            Role           @default(MEMBER)
  password        Password?
  borrowRecords   BorrowRecord[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Password {
  id           String @id @default(uuid())
  member       Member @relation(fields: [memberId], references: [id])
  memberId     String @unique
  passwordHash String
}

model Book {
  id            String         @id @default(uuid())
  title         String
  author        String
  genre         String
  publishedDate DateTime
  isbn          String         @unique
  status        Status         @default(AVAILABLE)
  borrowRecords BorrowRecord[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model BorrowRecord {
  id           String       @id @default(uuid())
  bookId       String
  book         Book         @relation(fields: [bookId], references: [id])
  memberId     String      
  member       Member       @relation(fields: [memberId], references: [id])
  borrowedDate DateTime
  dueDate      DateTime
  returnDate   DateTime?
  status       BorrowStatus @default(BORROWED)
}

enum Role {
  ADMIN
  LIBRARIAN
  MEMBER
}

enum Status {
  AVAILABLE
  BORROWED
}

enum BorrowStatus {
  BORROWED
  RETURNED
}
